---
// Interactive Spline hero using runtime with full user controls and natural camera behavior
---

<style>
  /* Import cosmic fonts */
  @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&family=Rajdhani:wght@300;400;500;600;700&display=swap');

  .hero {
    position: relative;
    width: 100vw;
    height: 100svh;      /* iOS-safe full viewport */
    overflow: hidden;
    background: #050509;
  }
  canvas {
    display: block;
    width: 100%;
    height: 100%;
    /* Ensure canvas is properly positioned */
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
  }
  .overlay {
    position: absolute;
    inset: 0;
    z-index: 2;
    display: grid;
    place-items: center;
    pointer-events: none; /* Allow Spline interactions while keeping overlay content interactive */
    padding: clamp(16px, 4vw, 48px);
  }

  /* Enhanced hero content wrapper */
  .hero-cosmic-wrapper {
    max-width: 600px;
    width: 100%;
    
    /* Fade-in animation on load */
    opacity: 0;
    animation: cosmicFadeIn 1.5s ease-out 0.5s forwards;
    
    /* Transform for smooth entrance */
    transform: translateY(20px);
    
    /* Enable pointer events for interactive content */
    pointer-events: auto;
  }

  /* Logo video cosmic enhancement */
  .hero-logo-video {
    display: block;
    width: clamp(180px, 25vw, 320px);
    height: auto;
    margin: 0 auto clamp(2rem, 6vw, 3rem);
    
    /* Enhanced cosmic glow */
    filter: 
      drop-shadow(0 0 20px rgba(147, 51, 234, 0.4))
      drop-shadow(0 0 40px rgba(147, 51, 234, 0.2))
      brightness(1.1);
    
    /* Smooth scaling on hover */
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 12px;
  }

  .hero-logo-video:hover {
    transform: scale(1.02);
    filter: 
      drop-shadow(0 0 25px rgba(147, 51, 234, 0.6))
      drop-shadow(0 0 50px rgba(147, 51, 234, 0.3))
      brightness(1.15);
  }

  /* Enhanced CTA container with cosmic spacing */
  .hero-cta-container {
    display: flex;
    flex-direction: column;
    gap: clamp(1rem, 3vw, 1.5rem);
    align-items: center;
    justify-content: center;
    margin-top: clamp(1.5rem, 4vw, 2.5rem);
  }

  /* Minimalistic compact CTA button styling */
  .floating-cta {
    /* Modern cosmic typography - smaller and cleaner */
    font-family: 'Orbitron', 'Rajdhani', system-ui, -apple-system, sans-serif;
    font-size: clamp(0.75rem, 2vw, 0.875rem);
    font-weight: 400;
    letter-spacing: 0.03em;
    text-transform: uppercase;
    
    /* Compact minimalistic sizing */
    padding: clamp(0.5rem, 1.5vw, 0.625rem) clamp(1rem, 2.5vw, 1.25rem);
    min-height: 36px;
    
    /* Ultra-minimal cosmic styling */
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.08);
    border-radius: 4px;
    backdrop-filter: blur(8px);
    
    /* Smooth minimal transitions */
    transition: all 0.25s ease;
    cursor: pointer;
    text-decoration: none;
    position: relative;
    
    /* Prevent text selection */
    user-select: none;
    -webkit-user-select: none;
  }

  /* Primary CTA - Subtle minimalistic gradient */
  .primary-cta {
    /* Subtle gradient text effect */
    background: linear-gradient(135deg, #ffffff 0%, #c084fc 70%, #a855f7 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    
    /* Minimal neon glow */
    text-shadow: 
      0 0 3px rgba(255, 255, 255, 0.4),
      0 0 6px rgba(168, 85, 247, 0.3),
      0 0 10px rgba(168, 85, 247, 0.2);
    
    /* Subtle border glow */
    border-color: #a855f726;
    box-shadow: 
      0 0 8px rgba(168, 85, 247, 0.1),
      inset 0 0.5px 0 rgba(255, 255, 255, 0.05);
  }

  /* Secondary CTA - Minimal white/cyan gradient */
  .secondary-cta {
    /* Subtle gradient text effect */
    background: linear-gradient(135deg, #ffffff 0%, #f0f9ff 60%, #e0f2fe 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    
    /* Very subtle glow */
    text-shadow: 
      0 0 2px rgba(255, 255, 255, 0.5),
      0 0 4px rgba(255, 255, 255, 0.2),
      0 0 8px rgba(6, 182, 212, 0.1);
    
    /* Minimal border glow */
    border-color: rgba(255, 255, 255, 0.12);
    box-shadow: 
      0 0 6px rgba(255, 255, 255, 0.08),
      inset 0 0.5px 0 rgba(255, 255, 255, 0.05);
  }

  /* Minimal hover effects */
  .floating-cta:hover {
    transform: translateY(-1px);
    backdrop-filter: blur(10px);
    
    /* Subtle border glow on hover */
    border-color: rgba(255, 255, 255, 0.15);
  }

  .primary-cta:hover {
    /* Slightly brighter gradient on hover */
    background: linear-gradient(135deg, #ffffff 0%, #d8b4fe 60%, #c084fc 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    
    /* Minimal enhanced glow */
    text-shadow: 
      0 0 4px rgba(255, 255, 255, 0.6),
      0 0 8px rgba(168, 85, 247, 0.4),
      0 0 12px rgba(168, 85, 247, 0.3);
    
    box-shadow: 
      0 0 12px rgba(168, 85, 247, 0.15),
      inset 0 0.5px 0 rgba(255, 255, 255, 0.08);
  }

  .secondary-cta:hover {
    /* Slightly brighter gradient on hover */
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 50%, #f0f9ff 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    
    /* Minimal enhanced glow */
    text-shadow: 
      0 0 3px rgba(255, 255, 255, 0.7),
      0 0 6px rgba(255, 255, 255, 0.3),
      0 0 10px rgba(6, 182, 212, 0.15);
    
    box-shadow: 
      0 0 10px rgba(255, 255, 255, 0.12),
      inset 0 0.5px 0 rgba(255, 255, 255, 0.08);
  }

  /* Active/touch states for mobile */
  .floating-cta:active {
    transform: translateY(-1px) scale(0.98);
    transition: all 0.1s ease;
  }

  /* Cosmic fade-in animation */
  @keyframes cosmicFadeIn {
    0% {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    50% {
      opacity: 0.7;
      transform: translateY(10px) scale(0.98);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  /* Mobile Portrait (up to 480px) */
  @media (max-width: 30rem) {
    .hero {
      min-height: 100vh;
      min-height: 100svh; /* Use modern viewport units */
      width: 100vw;
      margin: 0;
      padding: 0;
    }
    
    .overlay {
      padding: 1rem;
      /* Ensure content fills mobile viewport */
      min-height: 100vh;
      min-height: 100svh;
    }
    
    .hero-logo-video {
      width: clamp(140px, 35vw, 200px);
      margin-bottom: 1.5rem;
    }
    
    .hero-cta-container {
      gap: 0.75rem;
      margin-top: 1.5rem;
    }
    
    .floating-cta {
      font-size: 0.75rem;
      padding: 0.5rem 1rem;
      min-width: 100px;
      min-height: 32px;
      /* Stack vertically on small mobile */
      width: auto;
      max-width: 140px;
    }
  }

  /* Mobile Landscape & Large Mobile (481px - 767px) */
  @media (min-width: 30.0625rem) and (max-width: 47.9375rem) {
    .hero {
      min-height: 100vh;
      min-height: 100svh;
      width: 100vw;
    }
    
    .overlay {
      min-height: 100vh;
      min-height: 100svh;
    }
    
    .hero-cta-container {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: center;
      gap: 0.875rem;
    }
    
    .floating-cta {
      font-size: 0.8125rem;
      padding: 0.5625rem 1.125rem;
      min-width: 110px;
      min-height: 34px;
    }
  }

  /* Tablet (768px+) */
  @media (min-width: 48rem) {
    .hero-cta-container {
      flex-direction: row;
      gap: 1rem;
    }
    
    .floating-cta {
      font-size: 0.875rem;
      padding: 0.625rem 1.25rem;
      min-height: 36px;
    }
  }

  /* Desktop (1024px+) */
  @media (min-width: 64rem) {
    .hero-logo-video {
      width: clamp(240px, 20vw, 320px);
    }
    
    .floating-cta {
      font-size: 0.875rem;
      padding: 0.625rem 1.25rem;
      min-height: 36px;
    }
  }

  /* Reduce motion for users who prefer it */
  @media (prefers-reduced-motion: reduce) {
    .hero-cosmic-wrapper {
      animation: none;
      opacity: 1;
      transform: none;
    }
    
    .floating-cta,
    .hero-logo-video {
      transition: none;
    }
    
    .floating-cta:hover {
      transform: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .floating-cta {
      border-width: 2px;
      border-color: currentColor;
    }
    
    .primary-cta,
    .secondary-cta {
      -webkit-text-fill-color: unset;
      background: none;
      color: white;
    }
  }

  /* Touch device optimizations */
  @media (hover: none) and (pointer: coarse) {
    .floating-cta {
      min-height: 52px; /* Larger touch targets */
    }
    
    .floating-cta:hover {
      /* Disable hover effects on touch devices */
      transform: none;
      text-shadow: inherit;
      box-shadow: inherit;
    }
  }
</style>

<div class="hero">
  <canvas id="home3d"></canvas>
  <div class="overlay">
    <div class="hero-cosmic-wrapper">
      <!-- ZeroMotion Logo Video -->
      <div class="flex justify-center">
        <video 
          class="hero-logo-video"
          autoplay 
          muted 
          loop 
          playsinline
          preload="metadata"
        >
          <source src="/media/ZeroMotion-Transparent-OBS-v2.webm" type="video/webm">
          <!-- Fallback for browsers that don't support WebM -->
          <source src="/media/ZeroMotion-Transparent.mov" type="video/mp4">
        </video>
      </div>
      
      <div class="hero-cta-container">
        <a 
          href="/contact" 
          class="floating-cta primary-cta"
        >
          Contact Now
        </a>
        <a 
          href="/pricing" 
          class="floating-cta secondary-cta"
        >
          See Pricing
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  // Import and initialize Spline runtime with full interactivity
  import { Application } from "@splinetool/runtime";

  const SPLINE_URL = "https://prod.spline.design/M1xfE4sHHL-Zx4C2/scene.splinecode";

  async function initSpline() {
    const canvas = document.getElementById("home3d");
    if (!canvas || !(canvas instanceof HTMLCanvasElement)) {
      console.error("Canvas element not found or not a canvas");
      return;
    }

    console.log("Canvas found, initializing Spline...");
    const app = new Application(canvas);

    // Utility: resize helper to keep canvas crisp without CSS scaling.
    function fit() {
      const { clientWidth: w, clientHeight: h } = canvas;
      console.log(`Resizing canvas to ${w}x${h}`);
      app.setSize(w, h);
    }

    try {
      console.log("Loading Spline scene from:", SPLINE_URL);
      await app.load(SPLINE_URL);
      console.log("Spline scene loaded successfully with full interactivity");

      // Keep sizing correct on load and resize
      fit();
      window.addEventListener("resize", fit);
      
      // Initial fit after a brief delay to ensure proper sizing
      setTimeout(fit, 100);
      
    } catch (error) {
      console.error("Error loading Spline scene:", error);
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initSpline);
  } else {
    initSpline();
  }
</script>
